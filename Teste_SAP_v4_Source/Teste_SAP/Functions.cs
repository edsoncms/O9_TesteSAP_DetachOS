/* 
 This source code (the "Generated Software") is generated by the OutSystems Platform 
 and is licensed by OutSystems (http://www.outsystems.com) to You solely for testing and evaluation 
 purposes, unless You and OutSystems have executed a specific agreement covering the use terms and 
 conditions of the Generated Software, in which case such agreement shall apply. 
*/

using System;
using OutSystems.HubEdition.RuntimePlatform;
using OutSystems.HubEdition.RuntimePlatform.Db;
using OutSystems.Internal.Db;
using OutSystems.RuntimeCommon;

namespace ssTeste_SAP {
	public class Functions {
		/// <summary>
		/// Function <code>rssextensionplatformpasswordutils_ActionGenerateSaltedMD5Hash</code> that represents
		///  the Service Studio function <code>GenerateSaltedMD5Hash</code> <p> Description: Salts the passwor
		/// d with a fixed number and hashes it using the MD5 hash algorithm. </p>
		/// </summary>

		public static string rssextensionplatformpasswordutils_ActionGenerateSaltedMD5Hash(HeContext heContext, string inParamPlainTextPassword) {
			string outParamSaltedMD5HashPassword;
			Actions.ActionGenerateSaltedMD5Hash(heContext, inParamPlainTextPassword, out outParamSaltedMD5HashPassword);
			return outParamSaltedMD5HashPassword;
		}

		/// <summary>
		/// Function <code>rssespaceservicecenter_NotifyGetMessage</code> that represents the Service Studio
		///  function <code>NotifyGetMessage</code> <p> Description: Returns the notification message sent b
		/// y the Notify action.</p>
		/// </summary>

		public static string rssespaceservicecenter_NotifyGetMessage(HeContext heContext) {
			string outParamMessage;
			ExtendedActions.NotifyGetMessage(heContext, out outParamMessage);
			return outParamMessage;
		}

		/// <summary>
		/// Function <code>rssespacecharts_ActionYAxisFormat_Init</code> that represents the Service Studio
		///  function <code>YAxisFormat_Init</code> <p> Description: Initializes an YAxisFormat record with th
		/// e values passed as arguments. The record is returned by the action.</p>
		/// </summary>

		public static RCYAxisFormatRecord rssespacecharts_ActionYAxisFormat_Init(HeContext heContext, string inParamTitle, decimal inParamMinValue, decimal inParamMaxValue, string inParamValuesPrefix, string inParamValuesSuffix, decimal inParamGridLineStep) {
			RCYAxisFormatRecord.EnsureInitialized();
			RCYAxisFormatRecord outParamYAxisFormat;
			Actions.ActionYAxisFormat_Init(heContext, inParamTitle, inParamMinValue, inParamMaxValue, inParamValuesPrefix, inParamValuesSuffix, inParamGridLineStep, out outParamYAxisFormat);
			return outParamYAxisFormat;
		}

		/// <summary>
		/// Function <code>rssespacecharts_ActionDataPoint_Init</code> that represents the Service Studio
		///  function <code>DataPoint_Init</code> <p> Description: Initializes a DataPoint record with th
		/// e values passed as arguments. The record is returned by the action.</p>
		/// </summary>

		public static RCDataPointRecord rssespacecharts_ActionDataPoint_Init(HeContext heContext, string inParamLabel, decimal inParamValue, string inParamDataSeriesName, string inParamTooltip, string inParamColor) {
			RCDataPointRecord.EnsureInitialized();
			RCDataPointRecord outParamDataPoint;
			Actions.ActionDataPoint_Init(heContext, inParamLabel, inParamValue, inParamDataSeriesName, inParamTooltip, inParamColor, out outParamDataPoint);
			return outParamDataPoint;
		}

		/// <summary>
		/// Function <code>rssespacecharts_ActionChartFormat_Init</code> that represents the Service Studio
		///  function <code>ChartFormat_Init</code> <p> Description: Initializes a ChartFormat record with th
		/// e values passed as arguments. The record is returned by the action.</p>
		/// </summary>

		public static RCChartFormatRecord rssespacecharts_ActionChartFormat_Init(HeContext heContext, bool inParamShowDataPointValues, bool inParamUseAnimation) {
			RCChartFormatRecord.EnsureInitialized();
			RCChartFormatRecord outParamChartFormat;
			Actions.ActionChartFormat_Init(heContext, inParamShowDataPointValues, inParamUseAnimation, out outParamChartFormat);
			return outParamChartFormat;
		}

		/// <summary>
		/// Function <code>rssespacecharts_ActionXAxisFormat_Init</code> that represents the Service Studio
		///  function <code>XAxisFormat_Init</code> <p> Description: Initializes an XAxisFormat record with th
		/// e values passed as arguments. The record is returned by the action.</p>
		/// </summary>

		public static RCXAxisFormatRecord rssespacecharts_ActionXAxisFormat_Init(HeContext heContext, string inParamTitle, int inParamLabelsRotation, string inParamMinValue, string inParamMaxValue, int inParamValuesType) {
			RCXAxisFormatRecord.EnsureInitialized();
			RCXAxisFormatRecord outParamXAxisFormat;
			Actions.ActionXAxisFormat_Init(heContext, inParamTitle, inParamLabelsRotation, inParamMinValue, inParamMaxValue, inParamValuesType, out outParamXAxisFormat);
			return outParamXAxisFormat;
		}

		/// <summary>
		/// Function <code>rssespacecharts_ActionDataPoint_GetClicked</code> that represents the Service Studio
		///  function <code>DataPoint_GetClicked</code> <p> Description: Returns the data point that was clicke
		/// d on the chart. Execute this action in the On Click action of a chart.</p>
		/// </summary>

		public static RCDataPointRecord rssespacecharts_ActionDataPoint_GetClicked(HeContext heContext) {
			RCDataPointRecord.EnsureInitialized();
			RCDataPointRecord outParamDataPoint;
			Actions.ActionDataPoint_GetClicked(heContext, out outParamDataPoint);
			return outParamDataPoint;
		}

		/// <summary>
		/// Function <code>rssespacecharts_ActionAdvancedFormat_Init</code> that represents the Service Studio
		///  function <code>AdvancedFormat_Init</code> <p> Description: Initializes an AdvancedFormat recor
		/// d with the values passed as arguments. The record is returned by the action.</p>
		/// </summary>

		public static RCAdvancedFormatRecord rssespacecharts_ActionAdvancedFormat_Init(HeContext heContext, RLAdvancedDataPointFormatRecordList inParamDataPointFormats, RLAdvancedDataSeriesFormatRecordList inParamDataSeriesFormats, string inParamXAxisJSON, string inParamYAxisJSON, string inParamHighchartsJSON) {
			RCAdvancedFormatRecord.EnsureInitialized();
			RCAdvancedFormatRecord outParamAdvancedFormat;
			Actions.ActionAdvancedFormat_Init(heContext, inParamDataPointFormats, inParamDataSeriesFormats, inParamXAxisJSON, inParamYAxisJSON, inParamHighchartsJSON, out outParamAdvancedFormat);
			return outParamAdvancedFormat;
		}

		/// <summary>
		/// Function <code>rssespacerichwidgets_ActionDate_MonthName</code> that represents the Service Studio
		///  function <code>Date_MonthName</code> <p> Description: Returns the name of the month in a date.</p>
		/// </summary>

		public static string rssespacerichwidgets_ActionDate_MonthName(HeContext heContext, DateTime inParamDate) {
			string outParamMonthName;
			Actions.ActionDate_MonthName(heContext, inParamDate, out outParamMonthName);
			return outParamMonthName;
		}

		/// <summary>
		/// Function <code>rssespacerichwidgets_ActionList_Move_Down</code> that represents the Service Studio
		///  function <code>List_Move_Down</code> <p> Description: Use this action in the 'OnNotify' action o
		/// f the 'List_Move' widget to know the move direction. Compare with the 'NotifyWidgetGetMessage()'
		///  built-in action.</p>
		/// </summary>

		public static string rssespacerichwidgets_ActionList_Move_Down(HeContext heContext) {
			string outParamMessage;
			Actions.ActionList_Move_Down(heContext, out outParamMessage);
			return outParamMessage;
		}

		/// <summary>
		/// Function <code>rssespacerichwidgets_ActionList_SortColumn_GetOrderBy</code> that represents the
		///  Service Studio function <code>List_SortColumn_GetOrderBy</code> <p> Description: Retrieves th
		/// e order by string currently in use by a TableRecords widget (if any).</p>
		/// </summary>

		public static string rssespacerichwidgets_ActionList_SortColumn_GetOrderBy(HeContext heContext, string inParamTableRecordsId, string inParamDefaultOrder) {
			string outParamOrderBy;
			Actions.ActionList_SortColumn_GetOrderBy(heContext, inParamTableRecordsId, inParamDefaultOrder, out outParamOrderBy);
			return outParamOrderBy;
		}

		/// <summary>
		/// Function <code>rssespacerichwidgets_ActionDateTime_PrettyFormat</code> that represents the Service
		///  Studio function <code>DateTime_PrettyFormat</code> <p> Description: Formats a date and tim
		/// e relatively to the current moment. <= 1 min     16:08 (just now) < 24 hours     16:07 (1 minute
		///  ago), 22:09 (in 6 hours) >=24 hours and <= 1 day     yesterday, today, tomorrow <= 30 days     3
		/// 0 Jul (3 weeks ago), 8 Aug (9 days ago), 27 Aug (in 10 days), 16 Sep (in 4 weeks) > 30 days    30
		///  Apr, 20 Oct The year is different      2008/11/30, 2014/03/30     In this case:        - I
		/// t overrides the previous formats except the first one.         - The date format is as defined in
		///  the Service Center. </p>
		/// </summary>

		public static string rssespacerichwidgets_ActionDateTime_PrettyFormat(HeContext heContext, DateTime inParamDateTime) {
			string outParamFormattedText;
			Actions.ActionDateTime_PrettyFormat(heContext, inParamDateTime, out outParamFormattedText);
			return outParamFormattedText;
		}

		/// <summary>
		/// Function <code>rssespacerichwidgets_ActionFormatAddress</code> that represents the Service Studio
		///  function <code>FormatAddress</code> <p> Description: Returns an address with specified element
		/// s separated by commas (',').</p>
		/// </summary>

		public static string rssespacerichwidgets_ActionFormatAddress(HeContext heContext, string inParamAddress, string inParamPostalCode, string inParamCity, string inParamCountry) {
			string outParamCompleteAddress;
			Actions.ActionFormatAddress(heContext, inParamAddress, inParamPostalCode, inParamCity, inParamCountry, out outParamCompleteAddress);
			return outParamCompleteAddress;
		}

		/// <summary>
		/// Function <code>rssespacerichwidgets_ActionList_Navigation_GetStartIndex</code> that represents the
		///  Service Studio function <code>List_Navigation_GetStartIndex</code> <p> Description: Resets th
		/// e index stored in the Session Variable that is used in the 'List_Navigation_GetStartIndex'
		///  action.</p>
		/// </summary>

		public static int rssespacerichwidgets_ActionList_Navigation_GetStartIndex(HeContext heContext, string inParamListWidgetId, bool inParamRememberStartIndex, int inParamStartIndexOverride) {
			int outParamStartIndex;
			Actions.ActionList_Navigation_GetStartIndex(heContext, inParamListWidgetId, inParamRememberStartIndex, inParamStartIndexOverride, out outParamStartIndex);
			return outParamStartIndex;
		}

		/// <summary>
		/// Function <code>rssespacerichwidgets_ActionPopup_Upload_GetFile</code> that represents the Service
		///  Studio function <code>Popup_Upload_GetFile</code> <p> Description: Returns the binary file uploade
		/// d in the Popup_Upload web screen.   This action should be run on the OnNotify action of the
		///  Popup_Editor widget that links to the Popup_Upload web screen and in the Id parameter it shoul
		/// d send the result of NotifyWidgetGetMessage() built-in function.</p>
		/// </summary>

		public static RCUploadedFileRecord rssespacerichwidgets_ActionPopup_Upload_GetFile(HeContext heContext, int inParamId) {
			RCUploadedFileRecord.EnsureInitialized();
			RCUploadedFileRecord outParamFile;
			Actions.ActionPopup_Upload_GetFile(heContext, inParamId, out outParamFile);
			return outParamFile;
		}

		/// <summary>
		/// Function <code>rssespacerichwidgets_ActionGetApplicationName</code> that represents the Service
		///  Studio function <code>GetApplicationName</code> <p> Description: Returns the name of th
		/// e application for the specified eSpace.</p>
		/// </summary>

		public static string rssespacerichwidgets_ActionGetApplicationName(HeContext heContext, int inParamESpaceId) {
			string outParamApplicationName;
			Actions.ActionGetApplicationName(heContext, inParamESpaceId, out outParamApplicationName);
			return outParamApplicationName;
		}

		/// <summary>
		/// Function <code>rssespacerichwidgets_ActionInput_AutoComplete_GetIdentifier</code> that represents
		///  the Service Studio function <code>Input_AutoComplete_GetIdentifier</code> <p> Description: Gets th
		/// e identifier of the currently selected value in the Input widget bound to an Input_AutoComplete
		///  widget.</p>
		/// </summary>

		public static string rssespacerichwidgets_ActionInput_AutoComplete_GetIdentifier(HeContext heContext, string inParamInputWidgetId, string inParamPreviousIdentifier) {
			string outParamIdentifier;
			Actions.ActionInput_AutoComplete_GetIdentifier(heContext, inParamInputWidgetId, inParamPreviousIdentifier, out outParamIdentifier);
			return outParamIdentifier;
		}

		/// <summary>
		/// Function <code>rssespacerichwidgets_ActionList_Move_Up</code> that represents the Service Studio
		///  function <code>List_Move_Up</code> <p> Description: Use this action in the 'OnNotify' action of th
		/// e 'List_Move' widget to know the move direction. Compare with the 'NotifyWidgetGetMessage()'
		///  built-in action.</p>
		/// </summary>

		public static string rssespacerichwidgets_ActionList_Move_Up(HeContext heContext) {
			string outParamMessage;
			Actions.ActionList_Move_Up(heContext, out outParamMessage);
			return outParamMessage;
		}

		/// <summary>
		/// Function <code>rssespacerichwidgets_ActionDate_PrettyFormat</code> that represents the Service
		///  Studio function <code>Date_PrettyFormat</code> <p> Description: Formats a date relatively t
		/// o today’s date: <= 1 day     yesterday, today, tomorrow <= 14 days     8 Aug (9 days ago), 27 Aug
		///  (in 10 days) <= 30 days     30 Jul (3 weeks ago), 16 Sep (in 4 weeks) > 30 days    30 Apr, 20 Oc
		/// t For a different year     2008/11/30, 2014/03/30     In this case:        - It overrides the
		///  previous formats except the first one.         - The date format is as defined in the Servic
		/// e Center. </p>
		/// </summary>

		public static string rssespacerichwidgets_ActionDate_PrettyFormat(HeContext heContext, DateTime inParamDate) {
			string outParamFormattedText;
			Actions.ActionDate_PrettyFormat(heContext, inParamDate, out outParamFormattedText);
			return outParamFormattedText;
		}

		/// <summary>
		/// Function <code>rssespacerichwidgets_ActionMenu_GetStyle</code> that represents the Service Studio
		///  function <code>Menu_GetStyle</code> <p> Description: Returns the styles for the menu options.</p>
		/// </summary>

		public static string rssespacerichwidgets_ActionMenu_GetStyle(HeContext heContext, bool inParamIsActive, string inParamActiveStyle, string inParamInactiveStyle) {
			string outParamStyle;
			Actions.ActionMenu_GetStyle(heContext, inParamIsActive, inParamActiveStyle, inParamInactiveStyle, out outParamStyle);
			return outParamStyle;
		}

		/// <summary>
		/// Function <code>ssGetMenuSubItem</code> that represents the Service Studio function
		///  <code>GetMenuSubItem</code> <p> Description: </p>
		/// </summary>

		public static RCMenuSubItemRecord ssGetMenuSubItem(HeContext heContext, int inParamId) {
			RCMenuSubItemRecord.EnsureInitialized();
			RCMenuSubItemRecord outParamRecord;
			ExtendedActions.GetMenuSubItem(heContext, inParamId, out outParamRecord);
			return outParamRecord;
		}

		/// <summary>
		/// Function <code>ssGetMenuItem</code> that represents the Service Studio function
		///  <code>GetMenuItem</code> <p> Description: </p>
		/// </summary>

		public static RCMenuItemRecord ssGetMenuItem(HeContext heContext, int inParamId) {
			RCMenuItemRecord.EnsureInitialized();
			RCMenuItemRecord outParamRecord;
			ExtendedActions.GetMenuItem(heContext, inParamId, out outParamRecord);
			return outParamRecord;
		}

		/// <summary>
		/// Function <code>ssGetUser</code> that represents the Service Studio function <code>GetUser</code>
		///  <p> Description: </p>
		/// </summary>

		public static RCUserRecord ssGetUser(HeContext heContext, int inParamId) {
			RCUserRecord.EnsureInitialized();
			RCUserRecord outParamRecord;
			ExtendedActions.GetUser(heContext, inParamId, out outParamRecord);
			return outParamRecord;
		}

		/// <summary>
		/// Function <code>ssGetXAxisValuesType</code> that represents the Service Studio function
		///  <code>GetXAxisValuesType</code> <p> Description: </p>
		/// </summary>

		public static RCXAxisValuesTypeRecord ssGetXAxisValuesType(HeContext heContext, int inParamId) {
			RCXAxisValuesTypeRecord.EnsureInitialized();
			RCXAxisValuesTypeRecord outParamRecord;
			ExtendedActions.GetXAxisValuesType(heContext, inParamId, out outParamRecord);
			return outParamRecord;
		}

		/// <summary>
		/// Function <code>ssGetLegendPosition</code> that represents the Service Studio function
		///  <code>GetLegendPosition</code> <p> Description: </p>
		/// </summary>

		public static RCLegendPositionRecord ssGetLegendPosition(HeContext heContext, int inParamId) {
			RCLegendPositionRecord.EnsureInitialized();
			RCLegendPositionRecord outParamRecord;
			ExtendedActions.GetLegendPosition(heContext, inParamId, out outParamRecord);
			return outParamRecord;
		}

		/// <summary>
		/// Function <code>ssGetStackingType</code> that represents the Service Studio function
		///  <code>GetStackingType</code> <p> Description: </p>
		/// </summary>

		public static RCStackingTypeRecord ssGetStackingType(HeContext heContext, int inParamId) {
			RCStackingTypeRecord.EnsureInitialized();
			RCStackingTypeRecord outParamRecord;
			ExtendedActions.GetStackingType(heContext, inParamId, out outParamRecord);
			return outParamRecord;
		}

		/// <summary>
		/// Function <code>ssGetIconName</code> that represents the Service Studio function
		///  <code>GetIconName</code> <p> Description: </p>
		/// </summary>

		public static RCIconNameRecord ssGetIconName(HeContext heContext, string inParamId) {
			RCIconNameRecord.EnsureInitialized();
			RCIconNameRecord outParamRecord;
			ExtendedActions.GetIconName(heContext, inParamId, out outParamRecord);
			return outParamRecord;
		}

		/// <summary>
		/// Function <code>ssGetIconSize</code> that represents the Service Studio function
		///  <code>GetIconSize</code> <p> Description: </p>
		/// </summary>

		public static RCIconSizeRecord ssGetIconSize(HeContext heContext, string inParamId) {
			RCIconSizeRecord.EnsureInitialized();
			RCIconSizeRecord outParamRecord;
			ExtendedActions.GetIconSize(heContext, inParamId, out outParamRecord);
			return outParamRecord;
		}

		/// <summary>
		/// Function <code>ssGetMessageType</code> that represents the Service Studio function
		///  <code>GetMessageType</code> <p> Description: </p>
		/// </summary>

		public static RCMessageTypeRecord ssGetMessageType(HeContext heContext, int inParamId) {
			RCMessageTypeRecord.EnsureInitialized();
			RCMessageTypeRecord outParamRecord;
			ExtendedActions.GetMessageType(heContext, inParamId, out outParamRecord);
			return outParamRecord;
		}

		/// <summary>
		/// Function <code>ssCheckAnonymousRole</code> that represents the Service Studio function
		///  <code>CheckAnonymousRole</code> <p> Description: </p>
		/// </summary>

		public static bool ssCheckAnonymousRole(HeContext heContext, int inParamUserId) {
			bool outParamHasRole;
			ExtendedActions.CheckAnonymousRole(heContext, inParamUserId, out outParamHasRole);
			return outParamHasRole;
		}

		/// <summary>
		/// Function <code>ssCheckRegisteredRole</code> that represents the Service Studio function
		///  <code>CheckRegisteredRole</code> <p> Description: </p>
		/// </summary>

		public static bool ssCheckRegisteredRole(HeContext heContext, int inParamUserId) {
			bool outParamHasRole;
			ExtendedActions.CheckRegisteredRole(heContext, inParamUserId, out outParamHasRole);
			return outParamHasRole;
		}

		/// <summary>
		/// Function <code>ssCheckTeste_SAPUserRole</code> that represents the Service Studio function
		///  <code>CheckTeste_SAPUserRole</code> <p> Description: </p>
		/// </summary>

		public static bool ssCheckTeste_SAPUserRole(HeContext heContext, int inParamUserId) {
			bool outParamHasRole;
			ExtendedActions.CheckTeste_SAPUserRole(heContext, inParamUserId, out outParamHasRole);
			return outParamHasRole;
		}

	}
}
