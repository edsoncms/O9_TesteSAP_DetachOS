/* 
 This source code (the "Generated Software") is generated by the OutSystems Platform 
 and is licensed by OutSystems (http://www.outsystems.com) to You solely for testing and evaluation 
 purposes, unless You and OutSystems have executed a specific agreement covering the use terms and 
 conditions of the Generated Software, in which case such agreement shall apply. 
*/

using System;
using System.Linq;
using OutSystems.HubEdition.RuntimePlatform;
using OutSystems.HubEdition.RuntimePlatform.Db;
using OutSystems.Internal.Db;

using System.IO;
using System.Text;
using System.Data;
using System.Web;
using System.Web.Caching;
using System.Collections.Generic;
using System.Runtime.CompilerServices;
using OutSystems.HubEdition.RuntimePlatform.Db;
using SAP.Middleware.Connector;
using SapNcoConnectionManager;
using OutSystems.Plugin.SAP;


namespace ssTeste_SAP {

	public class SapPluginRuntimeUtils {
		public static RfcConfigParameters GetRfcConfigParameters()
		{
			SapConfiguration config = SapConfiguration.GetCustomClientConfiguration("b812d203-2167-447b-8715-96db326ff175", 94);
			String user = (!String.IsNullOrEmpty(config.Username) ? config.Username: config.DefaultUsername);
			String pass = (!String.IsNullOrEmpty(config.Password) ? Settings.DecryptString(config.Password): Settings.DecryptString(config.DefaultPassword));
			return GetRfcConfigParameters(user, pass);
		}

		public static RfcConfigParameters GetRfcConfigParameters(String username, String password)
		{
			SapConfiguration config = SapConfiguration.GetCustomClientConfiguration("b812d203-2167-447b-8715-96db326ff175", 94);
			return ConnectionManager.GetRfcConfigParameters(
			(!String.IsNullOrEmpty(config.SystemId) ? config.SystemId: config.DefaultSystemId),
			(!String.IsNullOrEmpty(config.Client) ? config.Client: config.DefaultClient),
			(!String.IsNullOrEmpty(config.InstanceNumber) ? config.InstanceNumber: config.DefaultInstanceNumber),
			(!String.IsNullOrEmpty(config.ApplicationServer) ? config.ApplicationServer: config.DefaultApplicationServer),
			 "",
			username,
			password,
			(!String.IsNullOrEmpty(config.SapRouterString) ? config.SapRouterString: config.DefaultSapRouterString),
			10,
			10,
			0,
			3600000,
			600000,
			 "",
			 "PT",
			false,
			 ""
			);
		}

		public static SapNcoConnectionManager.ConnectionManager.Destination GetDestination(RfcConfigParameters configParameters)
		{
			return ConnectionManager.GetDestination(configParameters);
		}
	}
	public interface ICcSAPConnectionPRDCallbacks {
		string EvaluateExtendedProperty(HeContext heContext, string name);
	}


}